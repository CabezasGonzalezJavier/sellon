apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.0"
    defaultConfig {
        applicationId "com.surgery.touchsurgery"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    android {
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
    }
    packagingOptions {
        pickFirst 'META-INF/license.txt'
        exclude 'META-INF/rxjava.properties'
    }

    lintOptions {
        quiet true
        abortOnError false;
        ignoreWarnings true
        disable 'InvalidPackage'  // Some libraries have issues with this.
        disable 'OldTargetApi'    // Lint gives this warning but SDK 20 would be Android L Beta.
        disable 'IconDensities'   // For testing purpose. This is safe to remove.
    }
    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }
}

dependencies {
    compile "com.android.support.constraint:constraint-layout:$rootProject.constraintlayout"
    compile "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:design:$rootProject.supportLibraryVersion"
    compile "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:support-v4:$rootProject.supportLibraryVersion"
    compile "com.google.guava:guava:$rootProject.guavaVersion"
    compile "com.github.bumptech.glide:glide:$rootProject.glideVersion"
    compile "com.android.support.test.espresso:espresso-idling-resource:$rootProject.ext.espressoVersion"

    // Dependencies for local unit tests
    testCompile "junit:junit:$rootProject.junitVersion"
    testCompile "org.mockito:mockito-all:$rootProject.mockitoVersion"
    testCompile "org.hamcrest:hamcrest-all:$rootProject.hamcrestVersion"
    testCompile "org.powermock:powermock-module-junit4:$rootProject.powerMockito"
    testCompile "org.powermock:powermock-api-mockito:$rootProject.powerMockito"

    // Android Testing Support Library's runner and rules
    androidTestCompile "com.android.support.test:runner:$rootProject.ext.runnerVersion"
    androidTestCompile "com.android.support.test:rules:$rootProject.ext.rulesVersion"

    // Espresso UI Testing dependencies.
    androidTestCompile "com.android.support.test.espresso:espresso-core:$rootProject.ext.espressoVersion"
    androidTestCompile "com.android.support.test.espresso:espresso-contrib:$rootProject.ext.espressoVersion"
    androidTestCompile "com.android.support.test.espresso:espresso-intents:$rootProject.ext.espressoVersion"

    //Dagger
    compile "com.google.dagger:dagger:$rootProject.dagger"
    compile "com.google.dagger:dagger-android:$rootProject.dagger"
    annotationProcessor "com.google.dagger:dagger-android-processor:$rootProject.dagger"
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.dagger"

    // Rx java
    compile "io.reactivex:rxjava:$rootProject.rxjavaVersion"
    compile "io.reactivex:rxandroid:$rootProject.rxandroidVersion"

    // Retrofit
    compile "com.squareup.retrofit2:retrofit:$rootProject.retrofit"
    compile "com.squareup.retrofit2:converter-gson:$rootProject.retrofit"
    compile "com.squareup.retrofit2:adapter-rxjava:$rootProject.retrofit"
    compile "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:$rootProject.retrofit2rxjava2adapter"

    // OkHttp
    compile "com.squareup.okhttp3:okhttp:$rootProject.okhttp"
    testCompile "com.squareup.okhttp3:mockwebserver:$rootProject.okhttp"

    // Butter knife
    compile "com.jakewharton:butterknife:$rootProject.butterknife"
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.butterknife"

    compile 'com.github.bumptech.glide:glide:4.0.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.android.support:support-v4:26.+'
}

/*
Resolves dependency versions across test and production APKs, specifically, transitive
dependencies. This is required since Espresso internally has a dependency on support-annotations.
*/
configurations.all {
    resolutionStrategy.force "com.android.support:support-annotations:$rootProject.supportLibraryVersion"
}

/*
All direct/transitive dependencies shared between your test and production APKs need to be
excluded from the test APK! This is necessary because both APKs will contain the same classes. Not
excluding these dependencies from your test configuration will result in an dex pre-verifier error
at runtime. More info in this tools bug: (https://code.google.com/p/android/issues/detail?id=192497)
*/
configurations.compile.dependencies.each { compileDependency ->
    println "Excluding compile dependency: ${compileDependency.getName()}"
    configurations.androidTestCompile.dependencies.each { androidTestCompileDependency ->
        configurations.androidTestCompile.exclude module: "${compileDependency.getName()}"
    }
}
